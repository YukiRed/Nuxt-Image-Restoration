name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Log in to DockerHub (use the latest version of docker/login-action)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # Update to v3, compatible with Node.js 20
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Set up Docker Buildx (use the latest version of docker/setup-buildx-action)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Update to v3, compatible with Node.js 20

      # Step 4: Define environment variables for tagging
      - name: Set environment variables
        run: |
          echo "IMAGE_NAME=ddesmond/img-restoration" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
          echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV

      # Step 5: Build the Docker image and tag it with a timestamp and the commit SHA
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME:$TIMESTAMP --tag $IMAGE_NAME:$COMMIT_SHA --tag $IMAGE_NAME:latest

      # Step 6: List Docker images to ensure they are built
      - name: List Docker images
        run: docker images

      # Step 7: Push the Docker image to DockerHub
      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:$TIMESTAMP
          docker push $IMAGE_NAME:$COMMIT_SHA
          docker push $IMAGE_NAME:latest
